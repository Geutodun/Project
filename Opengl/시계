/*
초시계를 그리고 메뉴에 시작, 멈춤, 초기화 기능을 만들고 0.5초에 45도씩 회전후 4초마다 토침의 색깔을 바꾼다
*/


#include <stdio.h>
#include <GL/glut.h>
#include <GL/GL.h>
#include <GL/GLU.h>

static int Time = 0;
static int colorIndex = 0; // 색상 인덱스 변수
GLboolean Start = false;



void renderBitmapString(float x, float y, void* font, const char* string) {
    glRasterPos2f(x, y); // 텍스트 시작 위치 설정
    while (*string) {
        glutBitmapCharacter(font, *string); // 각 문자 출력
        string++;
    }
}

// 디스플레이 콜백 함수
void MyDisplay() {
    glClear(GL_COLOR_BUFFER_BIT); // 화면 초기화

    glMatrixMode(GL_MODELVIEW);
    glLoadIdentity(); // 초기화

    glColor3f(0, 0, 0); // 사각형 테두리 색 (검은색)
    glLineWidth(2); // 선 두께 설정

    // 사각형 테두리 그리기
    glBegin(GL_LINES);
    glVertex3f(-0.5, 0.5, 0.0);
    glVertex3f(0.5, 0.5, 0.0);
    glEnd();

    glBegin(GL_LINES);
    glVertex3f(-0.5, -0.5, 0.0);
    glVertex3f(0.5, -0.5, 0.0);
    glEnd();

    glBegin(GL_LINES);
    glVertex3f(-0.5, 0.5, 0.0);
    glVertex3f(-0.5, -0.5, 0.0);
    glEnd();

    glBegin(GL_LINES);
    glVertex3f(0.5, 0.5, 0.0);
    glVertex3f(0.5, -0.5, 0.0);
    glEnd();

    // 시계 숫자 렌더링
    renderBitmapString(-0.055, 0.4, GLUT_BITMAP_HELVETICA_18, "12");
    renderBitmapString(0.4, -0.05, GLUT_BITMAP_HELVETICA_18, "3");
    renderBitmapString(-0.035, -0.45, GLUT_BITMAP_HELVETICA_18, "6");
    renderBitmapString(-0.45, -0.05, GLUT_BITMAP_HELVETICA_18, "9");

    // 막대기 색상 설정
    if (colorIndex == 0) glColor3f(1, 0, 0); // 빨간색
    else if (colorIndex == 1) glColor3f(0, 1, 0); // 초록색
    else if (colorIndex == 2) glColor3f(0, 0, 1); // 파란색
    else glColor3f(1, 1, 0); // 노란색

    // 회전 적용
    glPushMatrix();
    glRotatef((GLfloat)Time, 0.0, 0.0, 1.0);
    glBegin(GL_LINES);
    glVertex3f(0.0, 0.0, 0.0);
    glVertex3f(0.0, 0.35, 0.0); // 시계 바늘 길이
    glEnd();
    glPopMatrix();

    glutSwapBuffers();
    glFlush(); // 화면에 출력
}

// 타이머 콜백 함수
void MyTimer(int Value) {
    int x = Value;
    if (Start == 1)
    {
        if (Time == 0)
            x = 1;
        Time = (Time - 30) % 360; // 500ms마다 회전
        
        // 색상 인덱스 변경 (4초마다)
        if (Time == -180) { // 500ms * 8 = 4000ms
            colorIndex = (colorIndex + 1) % 4;
        }
        x++;
    }
    glutPostRedisplay(); // 화면 재설정
    glutTimerFunc(500, MyTimer, x); // 500ms마다 타이머 재호출
}

//메뉴 함수
void MyMainMenu(int entryID) {
    if (entryID == 1)
    {
        Start = true;
    }
    else if (entryID == 2)
    {
        Start = false;
    }
    else if (entryID == 3)
    {
        Start = false;
        Time = 0;
    }
    glutPostRedisplay();
}

int main(int argc, char** argv) {
    // 윈도우 초기화
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_RGB | GLUT_DOUBLE);
    glutInitWindowSize(320, 320); // 창 크기
    glutInitWindowPosition(0, 0); // 창 위치
    glutCreateWindow("Color Changing Clock Arm");
    glClearColor(1.0, 1.0, 1.0, 1.0); // 배경 색상 (흰색)

    // 무대 설정
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    glOrtho(-1.0, 1.0, -1.0, 1.0, -1.0, 1.0); // 무대 크기 설정

    //메뉴등록(만들기)
    GLint MyMainMenuID = glutCreateMenu(MyMainMenu);
    glutAddMenuEntry("Start"/*메뉴 이름*/, 1/*클릭했을 때 리턴값*/);
    glutAddMenuEntry("Stop", 2);
    glutAddMenuEntry("ReStart", 3);
    glutAttachMenu(GLUT_RIGHT_BUTTON);   //메뉴가 나오는 이벤트  [마우스 오른쪽 클릭]

    // 디스플레이 및 타이머 콜백 함수 등록
    glutDisplayFunc(MyDisplay);
    glutTimerFunc(500, MyTimer, 1);

    glutMainLoop(); // 무한 루프
    return 0;
}
